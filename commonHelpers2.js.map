{"version":3,"file":"commonHelpers2.js","sources":["../src/JS/API.js","../src/JS/markup-product-cards.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://food-boutique.b.goit.study/api/';\n\nexport const getAllProducts = async () => {\n  const res = await axios.get(`${BASE_URL}products/`);\n  return await res.data;\n};\n\nexport const getProductsByParams = async optionsObj => {\n  let FULL_URL = `${BASE_URL}products/?`;\n\n  for (const key in optionsObj) {\n    FULL_URL += `&${key}=${optionsObj[key].toString()}`;\n  }\n\n  const res = await axios.get(FULL_URL);\n  return await res.data;\n};\n\nexport const getProductsCategories = async () => {\n  const res = await axios.get(`${BASE_URL}products/categories/`);\n  return await res.data;\n};\n\nexport const getDiscountProducts = async () => {\n  const res = await axios.get(`${BASE_URL}products/discount/`);\n  return await res.data;\n};\n\nexport const getPopularProducts = async (limit = 5) => {\n  const FULL_URL = Number.isInteger(limit)\n    ? `${BASE_URL}products/popular/?limit=${limit}`\n    : `${BASE_URL}products/popular/`;\n\n  const res = await axios.get(FULL_URL);\n  return await res.data;\n};\n\nexport const getProductById = async id => {\n  const res = await axios.get(`${BASE_URL}products/?id=${id}`);\n  return await res.data;\n};\n\nexport const createNewOrder = async orderObj => {\n  const res = await axios.post(`${BASE_URL}orders/`, JSON.stringify(orderObj));\n  return await res.data;\n};\n\nexport const orderSubscription = async email => {\n  const res = await axios.post(`${BASE_URL}subscription/`, {\n    email: `${email}`,\n  });\n  return await res.data;\n};\n","const refs = {\n  divProdCards: document.querySelector('.js-product-cards'),\n};\n\nexport function appendMarkup(data) {\n  refs.divProdCards.innerHTML = '';\n  refs.divProdCards.insertAdjacentHTML('beforeend', createMarkup(data));\n}\n\nfunction createMarkup(data) {\n  return data.results\n    .map(\n      ({ _id, name, img, category, price, size, popularity }) =>\n        `<div class=\"product-card\" id=\"${_id}\">\n                  <div class=\"product-card-img\">\n                      <img class=\"card-img\"\n                          src=\"${img}\"\n                          alt=\"${name}\">\n                  </div>\n                  <h3 class=\"produc-card-name\">${name}</h3>\n                  <div class=\"product-card-description\">\n                      <div class=\"card-description\">\n                          <p>Category:</p>\n                          <p class=\"card-description-value\">${category}</p>\n                      </div>\n                      <div class=\"card-description\">\n                          <p>Size:</p>\n                          <p class=\"card-description-value\">${size}</p>\n                      </div>\n                      <div class=\"card-description\">\n                          <p>Popularity:</p>\n                          <p class=\"card-description-value\">${popularity}</p>\n                      </div>\n                  </div>\n                  <div class=\"product-card-price-btn\">\n                      <p class=\"product-card-price\">${price}</p>\n                      <button type=\"button\" class=\"product-card-btn\">\n                          <svg width=\"18\" height=\"18\">\n                              <use class=\"button-icon\" href=\"\"></use>\n                          </svg>\n                      </button>\n                  </div>\n              </div>`\n    )\n    .join('');\n}\n","import { getProductsByParams } from './JS/API';\nimport { appendMarkup } from './JS/markup-product-cards';\n\nwindow.addEventListener('resize', fetchBasedOnScreenSize);\nfetchBasedOnScreenSize();\n\nfunction fetchBasedOnScreenSize() {\n  const options = {\n    keyword: '',\n    page: 1,\n    limit: '',\n  };\n  const windowWidth = window.innerWidth;\n  if (windowWidth < 768) {\n    options.limit = 6;\n    getProductsByParams(options)\n      .then(data => appendMarkup(data))\n      .catch(er => console.log(er));\n  } else if (windowWidth >= 768 && windowWidth < 1440) {\n    options.limit = 8;\n    getProductsByParams(options)\n      .then(data => appendMarkup(data))\n      .catch(er => console.log(er));\n  } else {\n    options.limit = 9;\n    getProductsByParams(options)\n      .then(data => appendMarkup(data))\n      .catch(er => console.log(er));\n  }\n}\n"],"names":["BASE_URL","getProductsByParams","optionsObj","FULL_URL","key","axios","refs","appendMarkup","data","createMarkup","_id","name","img","category","price","size","popularity","fetchBasedOnScreenSize","options","windowWidth","er"],"mappings":"svBAEA,MAAMA,EAAW,0CAOJC,EAAsB,MAAMC,GAAc,CACrD,IAAIC,EAAW,GAAGH,cAElB,UAAWI,KAAOF,EAChBC,GAAY,IAAIC,KAAOF,EAAWE,GAAK,SAAU,IAInD,OAAO,MADK,MAAMC,EAAM,IAAIF,CAAQ,GACnB,IACnB,EClBMG,EAAO,CACX,aAAc,SAAS,cAAc,mBAAmB,CAC1D,EAEO,SAASC,EAAaC,EAAM,CACjCF,EAAK,aAAa,UAAY,GAC9BA,EAAK,aAAa,mBAAmB,YAAaG,EAAaD,CAAI,CAAC,CACtE,CAEA,SAASC,EAAaD,EAAM,CAC1B,OAAOA,EAAK,QACT,IACC,CAAC,CAAE,IAAAE,EAAK,KAAAC,EAAM,IAAAC,EAAK,SAAAC,EAAU,MAAAC,EAAO,KAAAC,EAAM,WAAAC,CAAY,IACpD,iCAAiCN;AAAA;AAAA;AAAA,iCAGRE;AAAA,iCACAD;AAAA;AAAA,iDAEgBA;AAAA;AAAA;AAAA;AAAA,8DAIaE;AAAA;AAAA;AAAA;AAAA,8DAIAE;AAAA;AAAA;AAAA;AAAA,8DAIAC;AAAA;AAAA;AAAA;AAAA,sDAIRF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAQjD,EACA,KAAK,EAAE,CACZ,CC1CA,OAAO,iBAAiB,SAAUG,CAAsB,EACxDA,IAEA,SAASA,GAAyB,CAChC,MAAMC,EAAU,CACd,QAAS,GACT,KAAM,EACN,MAAO,EACX,EACQC,EAAc,OAAO,WACvBA,EAAc,KAChBD,EAAQ,MAAQ,EAChBjB,EAAoBiB,CAAO,EACxB,KAAKV,GAAQD,EAAaC,CAAI,CAAC,EAC/B,MAAMY,GAAM,QAAQ,IAAIA,CAAE,CAAC,GACrBD,GAAe,KAAOA,EAAc,MAC7CD,EAAQ,MAAQ,EAChBjB,EAAoBiB,CAAO,EACxB,KAAKV,GAAQD,EAAaC,CAAI,CAAC,EAC/B,MAAMY,GAAM,QAAQ,IAAIA,CAAE,CAAC,IAE9BF,EAAQ,MAAQ,EAChBjB,EAAoBiB,CAAO,EACxB,KAAKV,GAAQD,EAAaC,CAAI,CAAC,EAC/B,MAAMY,GAAM,QAAQ,IAAIA,CAAE,CAAC,EAElC"}